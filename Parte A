// Universidad del Valle de Guatemala
// BE3029 - Electronica Digital 2
// Practica de laboratorio 2
// Nicole Rodriguez
// 21/07/2025

// Librerias
#include <Arduino.h>
#include <stdint.h>

// Definición de pines
uint8_t led1 = 13;
uint8_t led2 = 12;
uint8_t led3 = 25;
uint8_t led4 = 27;

uint8_t butSumar = 18;    // Pull-up interno (activo en LOW)
uint8_t butRestar = 5;    // Pull-down físico (activo en HIGH)

// Variables globales
int8_t contador = 0;
uint16_t tiempoAnteriorSumar = 0;
uint16_t tiempoAnteriorRestar = 0;
const uint16_t tiempoRebote = 200; // ms para anti-rebote

  // Encendemos los LEDs correspondientes al estado
  switch(estado) {
    case 1:
      digitalWrite(led1, HIGH);
      digitalWrite(led2, LOW);
      digitalWrite(led3, LOW);
      digitalWrite(led4, LOW);
      break;
    case 2:
      digitalWrite(led1, LOW);
      digitalWrite(led2, HIGH);
      digitalWrite(led3, LOW);
      digitalWrite(led4, LOW);
      break;
    case 3:
      digitalWrite(led1, LOW);
      digitalWrite(led2, LOW);
      digitalWrite(led3, HIGH);
      digitalWrite(led4, LOW);
      break;
    case 4:
      digitalWrite(led1, LOW);
      digitalWrite(led2, LOW);
      digitalWrite(led3, LOW);
      digitalWrite(led4, HIGH);
      break;
    default:
      // Todos los LEDs permanecen apagados
      digitalWrite(led1, LOW);
      digitalWrite(led2, LOW);
      digitalWrite(led3, LOW);
      digitalWrite(led4, LOW);
      break;
  }

void setup() {
  // Configuración de pines de LEDs como salidas
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  pinMode(led3, OUTPUT);
  pinMode(led4, OUTPUT);

  // Configuración de pines de botones
  pinMode(butSumar, INPUT_PULLUP);  // Configuración pull-up interna
  pinMode(butRestar, INPUT);        // Resistencia pull-down física de 10kΩ

  // Inicialización de LEDs
  actualizarLeds(contador);
}

void loop() {
  uint32_t tiempoActual = millis();

  // Botón Sumar
  if(digitalRead(butSumar) == LOW) {
    if(butSumar && (tiempoActual - tiempoAnteriorSumar >= tiempoRebote)) {
      tiempoAnteriorSumar = tiempoActual;
      contador++;
    	if(contador > 4) contador = 0;
      actualizarLeds(contador);
    }
  }

  // Botón Restar
  if(digitalRead(butRestar) == HIGH) {
    if(butRestar && (tiempoActual - tiempoAnteriorRestar >= tiempoRebote)) {
      tiempoAnteriorRestar = tiempoActual;
      contador--;
    if(contador < 0) contador = 4;
      actualizarLeds(contador);
    }
  }
  delay(10);
}
